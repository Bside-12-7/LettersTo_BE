name: deploy

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build -x test

      - name: docker build spring-app
        run: |
          docker build --tag spring-app:custom -f deploy/springapp/Dockerfile .
          docker save --output deploy/springapp/spring-app-image.tar spring-app:custom

      - name: docker build nginx
        run: |
          cd deploy/nginx
          docker build --tag nginx:custom .
          docker save --output nginx-image.tar nginx:custom

      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "deploy/springapp/spring-app-image.tar,deploy/nginx/nginx-image.tar,deploy/docker-compose.yml"
          target: "app"

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd app/deploy
            export SPRING_PROFILES_ACTIVE='${{ secrets.SPRING_PROFILES_ACTIVE }}'
            export SPRING_DATASOURCE_URL='${{ secrets.SPRING_DATASOURCE_URL }}'
            export SPRING_DATASOURCE_USERNAME='${{ secrets.SPRING_DATASOURCE_USERNAME }}'
            export SPRING_DATASOURCE_PASSWORD='${{ secrets.SPRING_DATASOURCE_PASSWORD }}'
            export KAKAO_AUTH_REST_API_KEY='${{ secrets.KAKAO_AUTH_REST_API_KEY }}'
            export KAKAO_AUTH_NATIVE_APP_KEY='${{ secrets.KAKAO_AUTH_NATIVE_APP_KEY }}'
            export KAKAO_AUTH_CLIENT_SECRET='${{ secrets.KAKAO_AUTH_CLIENT_SECRET }}'
            export KAKAO_AUTH_REDIRECT_URI='${{ secrets.KAKAO_AUTH_REDIRECT_URI }}'
            export TOKEN_SECRET='${{ secrets.TOKEN_SECRET }}'
            docker-compose down
            docker load -i springapp/spring-app-image.tar
            docker load -i nginx/nginx-image.tar
            docker-compose up -d
