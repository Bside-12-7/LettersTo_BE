name: prod-deploy

on:
  push:
    branches: [ "release" ]

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build -x test

      - name: docker build spring-app
        run: |
          docker build --tag spring-app:custom -f deploy/springapp/Dockerfile .
          docker save --output deploy/springapp/spring-app-image.tar spring-app:custom

      - name: docker build nginx
        run: |
          cd deploy/nginx
          docker build --tag nginx:custom .
          docker save --output nginx-image.tar nginx:custom

      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          port: ${{ secrets.PORT_PROD }}
          username: ${{ secrets.USERNAME_PROD }}
          password: ${{ secrets.PASSWORD_PROD }}
          source: "deploy/springapp/spring-app-image.tar,deploy/nginx/nginx-image.tar,deploy/docker-compose.yml"
          target: "app"

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          port: ${{ secrets.PORT_PROD }}
          username: ${{ secrets.USERNAME_PROD }}
          password: ${{ secrets.PASSWORD_PROD }}
          script: |
            cd app/deploy
            export SPRING_PROFILES_ACTIVE=prod
            export SPRING_DATASOURCE_URL='${{ secrets.SPRING_DATASOURCE_URL_PROD }}'
            export SPRING_DATASOURCE_USERNAME='${{ secrets.SPRING_DATASOURCE_USERNAME_PROD }}'
            export SPRING_DATASOURCE_PASSWORD='${{ secrets.SPRING_DATASOURCE_PASSWORD_PROD }}'
            export KAKAO_AUTH_REST_API_KEY='${{ secrets.KAKAO_AUTH_REST_API_KEY }}'
            export KAKAO_AUTH_NATIVE_APP_KEY='${{ secrets.KAKAO_AUTH_NATIVE_APP_KEY }}'
            export KAKAO_AUTH_CLIENT_SECRET='${{ secrets.KAKAO_AUTH_CLIENT_SECRET }}'
            export KAKAO_AUTH_REDIRECT_URI='${{ secrets.KAKAO_AUTH_REDIRECT_URI }}'
            export APPLE_AUTH_REST_API_KEY='${{ secrets.APPLE_AUTH_REST_API_KEY }}'
            export APPLE_AUTH_NATIVE_APP_KEY='${{ secrets.APPLE_AUTH_NATIVE_APP_KEY }}'
            export APPLE_AUTH_CLIENT_SECRET='${{ secrets.APPLE_AUTH_CLIENT_SECRET }}'
            export APPLE_AUTH_REDIRECT_URI='${{ secrets.APPLE_AUTH_REDIRECT_URI }}'
            export TOKEN_SECRET='${{ secrets.TOKEN_SECRET }}'
            export AWS_S3_BUCKET='${{ secrets.AWS_S3_BUCKET }}'
            export AWS_S3_ACCESS_KEY_ID='${{ secrets.AWS_S3_ACCESS_KEY_ID }}'
            export AWS_S3_SECRET_ACCESS_KEY='${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}'
            docker-compose down
            docker load -i springapp/spring-app-image.tar
            docker load -i nginx/nginx-image.tar
            docker-compose up -d
